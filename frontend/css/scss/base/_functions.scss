/* ==========================================================================
	Custom Library of Functions
	Some are collected @ Bourbon - http://bourbon.io/docs/
	========================================================================== */

/* Convert pixels to rems
	eg. for a relational value of 12px write rem(12)
	Assumes $em-base is the font-size of <html>
	========================================================================== */

@function rem($pxval) {
	@if not unitless($pxval) {
		$pxval: strip-units($pxval);
	}

	$base: $em-base;

	@if not unitless($base) {
		$base: strip-units($base);
	}

	@return ($pxval / $base) * 1rem;
}


/* Strips the unit from a number.

	@param {Number (With Unit)} $value
	@example scss - Usage

	$dimension: strip-units(10em);
	@example css - CSS Output

	$dimension: 10;
	@return {Number (Unitless)}
	========================================================================== */

@function strip-units($value) {
	@return ($value / ($value * 0 + 1));
}


/* Vertical Rhythm by Olaf Muller
	========================================================================== */

// Presets - Modular scales
$modular-scales: (
	"minor second": 1.067,
	"major second": 1.125,
	"minor third": 1.2,
	"major third": 1.25,
	"perfect fourth": 1.333,
	"augmented fourth": 1.414,
	"perfect fifth": 1.5,
	"minor sixth": 1.6,
	"golden section": 1.618,
	"major sixth": 1.667,
	"minor seventh": 1.778,
	"major seventh": 1.875,
	"octave": 2,
	"major tenth": 2.5,
	"major eleventh": 2.667,
	"major twelfth": 3,
	"double octave": 4
);

// Defaults
// Overwrite these in variables.scss
$px-font-size:			16 !default; // F.e. 16
$px-line-height:		24 !default; // F.e. 24

$rhythm-offset:		0.75 !default; // F.e. 0.75 or 0.6875

// Cap height
// This value may vary for each font. Unitless value relative to 1em.
$cap-height:			0.02 !default; // F.e. -0.02

// Headers and paragraphs
// The leaders and trailers are calculated in rhythm rows.
$header-leader:		0 !default; // F.e. 0.5
$header-trailer:		0 !default; // F.e. 0.5

$paragraph-leader:	0 !default; // F.e. 0.5
$paragraph-trailer:	1 !default; // F.e. 0.5

// Scale and sizes used througout the site
// The "type-scale" is one of the preset scales.
$modular-scale:		"golden section" !default;
$font-sizes:			(s, m, l) !default;
$font-size-default:	m !default;

// Calculate font-sizes based on the chosen preset scale and the number of sizes.
// Based on a preset scale. For more info see: http://www.modularscale.com
// Returns a Sass map.
@function calc-font-sizes($scale: $modular-scale, $font-sizes: $font-sizes, $font-size-default: $font-size-default) {
	$size-map:     ();
	$base-size:    $base-font-size;
	$scale-factor: map-get($modular-scales, $scale);
	$base-index:   index($font-sizes, $font-size-default);

	// Calculate from the base index upwards
	@for $i from $base-index through length($font-sizes) {
		$name: nth($font-sizes, $i);
		$value: if($i == $base-index, $base-size, ($value * $scale-factor));

		$size-map: map-merge($size-map, ($name: $value));
	}

	// When we have smaller sizes below the base
	@if ($base-index - 1 > 0) {

		// Reset the value for next calculations
		$value: $base-size;

		// And calculate the remainder from the index and down
		@for $i from ($base-index - 1) through 1 {
			$name: nth($font-sizes, $i);
			$value: ($value / $scale-factor);

			$size-map: map-merge($size-map, ($name: $value));
		}
	}

	@return $size-map;
}
